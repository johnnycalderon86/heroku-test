{"version":3,"sources":["sounds/f1pass.mp3","components/CircuitsCard.tsx","components/Circuits.tsx","components/StartPage.tsx","components/Home.tsx","components/About.tsx","components/Teams.tsx","components/Drivers.tsx","App.tsx","index.tsx"],"names":["module","exports","CircuitsCard","circuit","div","className","whileHover","scale","name","city","country","fastestLap","fastestLapDriver","fastestLapYear","length","img","src","trackImage","alt","whileTap","getCircuitsQuery","gql","containerVariants","hidden","opacity","y","visible","transition","ease","exit","element","icon","faArrowCircleLeft","Circuits","useQuery","loading","error","data","console","log","variants","initial","animate","to","circuitsData","circuits","map","key","id","displayCircuits","f1Sound","require","StartPage","useSound","volume","play","pause","useState","setIsHovering","onMouseEnter","onMouseLeave","x","type","delay","duration","Home","About","Teams","Drivers","client","ApolloClient","uri","cache","InMemoryCache","App","location","useLocation","exitBeforeEnter","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f9864c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/f1pass.4f886ffc.mp3\";","import React from 'react'\r\nimport { ICircuit } from './Circuits'\r\nimport '../styles/CircuitsCard.css'\r\nimport { motion } from 'framer-motion'\r\n\r\ntype Tcircuits = {\r\n    circuit: ICircuit\r\n}\r\n\r\n\r\nexport const CircuitsCard = ({ circuit }: Tcircuits) => {\r\n    return (\r\n        <motion.div className=\"CircuitsCard-div\"\r\n       \r\n        whileHover={{ scale: 1.1 }}\r\n        >\r\n            <h1 className=\"CircuitsCard-h1\">{circuit.name}</h1>\r\n            <h3 className=\"CircuitsCard-city-country\">{circuit.city} - {circuit.country}</h3>\r\n\r\n            <h3 className=\"CircuitsCard-fastestLap\">Fastest Lap: <span className=\"fastestLap-span\">{circuit.fastestLap}</span></h3>\r\n            <h3 className=\"CircuitsCard-fastestLapDriver\">{circuit.fastestLapDriver}({circuit.fastestLapYear})</h3>\r\n            <h3 className=\"length\">Length: {circuit.length}</h3>\r\n            <motion.img className=\"card-img\" src={circuit.trackImage} alt=\"circuit\" \r\n            whileHover={{ scale: 1.9 }}\r\n            whileTap={{ scale: 2 }}\r\n            />\r\n\r\n        </motion.div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { CircuitsCard } from './CircuitsCard'\r\nimport '../styles/Circuits.css'\r\nimport { motion } from 'framer-motion'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons'\r\nconst getCircuitsQuery = gql`\r\n{\r\n    circuits{\r\n        name\r\n        city\r\n        fastestLap\r\n        fastestLapDriver\r\n        fastestLapYear\r\n        fastestLapTeam\r\n        fastestLapCar\r\n        length\r\n        country\r\n        id\r\n        trackImage\r\n        weekendDate\r\n        month\r\n    }\r\n}\r\n`\r\n\r\nexport interface ICircuit {\r\n    name: string,\r\n    city: string,\r\n    fastestLap: string,\r\n    fastestLapDriver: string,\r\n    fastestLapYear: string,\r\n    fastestLapTeam: string,\r\n    fastestLapCar: string,\r\n    length: string,\r\n    country: string,\r\n    id: string,\r\n    trackImage: string,\r\n    weekendDate:string\r\n    month:string\r\n}\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        y: '-100vh',\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: {\r\n            ease: 'easeInOut',\r\n        }\r\n    },\r\n    exit: {\r\n        y: '-100vh',\r\n        transition: {\r\n\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\nconst element = <FontAwesomeIcon icon={faArrowCircleLeft} />\r\n\r\nconst Circuits = () => {\r\n\r\n\r\n\r\n    const { loading, error, data } = useQuery(getCircuitsQuery);\r\n    console.log(data);\r\n    const displayCircuits = () => {\r\n        const circuitsData = data;\r\n        if (loading) {\r\n            return <p>Loading....</p>\r\n        } else if (error) {\r\n            return <p>Error Fetching Data</p>\r\n        }\r\n        else {\r\n            return circuitsData.circuits.map((circuit: ICircuit) => {\r\n                return <CircuitsCard key={circuit.id} circuit={circuit} />\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"Circuits-div\"\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n        >\r\n\r\n    <h1 className=\"Circuits-h1\"> <Link to='/home'>{element}</Link> Circuits</h1>\r\n    \r\n            <div className=\"Circuits-cards-div\">\r\n            {displayCircuits()}\r\n\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Circuits\r\n","import React, { useState } from 'react'\r\nimport '../styles/StartPage.css'\r\nimport useSound from 'use-sound';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { motion } from 'framer-motion'\r\nconst f1Sound = require(\"../sounds/f1pass.mp3\")\r\n\r\nexport const StartPage = () => {\r\n    const [play, { pause }] = useSound(\r\n        f1Sound,\r\n        { volume: 0.1 }\r\n    );\r\n    const [isHovering, setIsHovering] = useState(\r\n        false\r\n    );\r\n    const onHoverHome = () => {\r\n        setIsHovering(true);\r\n        play();\r\n    }\r\n    const unHoverHome = () => {\r\n        setIsHovering(false);\r\n        pause();\r\n    }\r\n    const containerVariantsLeft = {\r\n\r\n        visible: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                type: 'spring', delay: 0.5\r\n            }\r\n        },\r\n        exit: {\r\n            x: '-100vw',\r\n            transition: {\r\n                delay: 0.5,\r\n                duration: 1,\r\n                ease: 'easeOut'\r\n            }\r\n        }\r\n    }\r\n    const containerVariantsRight = {\r\n\r\n        visible: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                type: 'spring', delay: 0.5\r\n            }\r\n\r\n        },\r\n        exit: {\r\n            x: '100vw',\r\n            transition: {\r\n                delay: 0.5,\r\n                duration: 1,\r\n                ease: 'easeOut'\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Link to=\"/home\"\r\n\r\n            onMouseEnter={onHoverHome}\r\n            onMouseLeave={unHoverHome}\r\n        >\r\n            <div className=\"Startpage-div\"\r\n\r\n            >\r\n                <motion.div className=\"left-side\"\r\n                    variants={containerVariantsLeft}\r\n                    animate=\"visible\"\r\n                    exit=\"exit\"\r\n                >\r\n\r\n                    <h1 className=\"glitch\">\r\n                        F1\r\n                </h1>\r\n                </motion.div>\r\n                <motion.div className=\"right-side\"\r\n                    variants={containerVariantsRight}\r\n                    animate=\"visible\"\r\n                    exit=\"exit\"\r\n                >\r\n\r\n\r\n                    <h1 className=\"glitch\">Fans</h1>\r\n                </motion.div>\r\n\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/Home.css'\r\nimport { motion } from 'framer-motion'\r\nimport {Link} from 'react-router-dom'\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        y: '-100vh',\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: {\r\n            ease: 'easeInOut', \r\n        }\r\n    },\r\n    exit: {\r\n        y: '-100vh',\r\n        transition: {\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\nexport const Home = () => {\r\n\r\n    return (\r\n        <motion.div className=\"Home-div\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <nav className=\"Home-nav\">\r\n                <Link className=\"Home-Link\" to='/about'>About</Link>\r\n                <Link className=\"Home-Link\" to='/circuits'>Circuits</Link>\r\n                <Link className=\"Home-Link\" to='/teams'>Teams</Link>\r\n                <Link className=\"Home-Link\" to='/drivers'>Drivers</Link>\r\n            </nav>\r\n        </motion.div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/About.css'\r\nimport { motion } from 'framer-motion'\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        y: '-100vh',\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: {\r\n            ease: 'easeInOut',\r\n        }\r\n    },\r\n    exit: {\r\n        y: '-100vh',\r\n        transition: {\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\nexport const About = () => {\r\n    return (\r\n        <motion.div className=\"About-div\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <div className=\"card\">\r\n                <p>I built this site to teach myself GraphQL using NodeJS, Apollo, React and MongoDB.</p>\r\n                <p>I created a GraphQL server that has a 'Circuits' object type. For the moment this is the only RootQuery.</p>\r\n                <p>The plan is to add 2 more object types: 'Teams' and 'Drivers'.</p>\r\n                <p>I am an avid fan of Formula 1 and wanted to create an informative site where all information concerning drivers teams and circuits is continuously updated.  </p>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/About.css'\r\nimport { motion } from 'framer-motion'\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        y: '-100vh',\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: {\r\n            ease: 'easeInOut',\r\n        }\r\n    },\r\n    exit: {\r\n        y: '-100vh',\r\n        transition: {\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\nexport const Teams = () => {\r\n    return (\r\n        <motion.div className=\"About-div\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <div className=\"card\">\r\n                <h1>Teams</h1>\r\n                <p>Under construction.  Will be a dynamic card layout, like the Circuits page</p>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/About.css'\r\nimport { motion } from 'framer-motion'\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        y: '-100vh',\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: {\r\n            ease: 'easeInOut',\r\n        }\r\n    },\r\n    exit: {\r\n        y: '-100vh',\r\n        transition: {\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\nexport const Drivers = () => {\r\n    return (\r\n        <motion.div className=\"About-div\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <div className=\"card\">\r\n                <h1>Drivers</h1>\r\n                <p>Under construction.  Will be a dynamic card layout, like the Circuits page</p>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\nimport { Route, Switch, useLocation } from 'react-router-dom'\r\nimport { AnimatePresence } from 'framer-motion'\r\n//component\r\nimport Circuits from './components/Circuits'\r\nimport { StartPage } from './components/StartPage';\r\nimport { Home } from './components/Home';\r\nimport { About } from './components/About';\r\nimport { Teams } from './components/Teams';\r\nimport { Drivers } from './components/Drivers';\r\n//------------------------------------\r\nconst client = new ApolloClient({\r\n  uri: '/graphql-f1',\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst App = () => {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n\r\n\r\n      <AnimatePresence exitBeforeEnter>\r\n        <Switch location={location} key={location.key}>\r\n          <Route exact path=\"/\">\r\n            <StartPage />\r\n          </Route>\r\n          <Route exact path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/circuits\">\r\n            <ApolloProvider client={client}>\r\n              <Circuits />\r\n            </ApolloProvider>\r\n          </Route>\r\n          <Route exact path=\"/teams\">\r\n            <Teams />\r\n          </Route>\r\n          <Route exact path=\"/drivers\">\r\n            <Drivers />\r\n          </Route>\r\n        </Switch>\r\n      </AnimatePresence>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}