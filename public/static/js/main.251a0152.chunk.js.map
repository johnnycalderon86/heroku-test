{"version":3,"sources":["sounds/f1pass.mp3","components/CircuitsCard.tsx","components/Circuits.tsx","components/StartPage.tsx","components/Home.tsx","components/About.tsx","components/Teams.tsx","components/Drivers.tsx","App.tsx","index.tsx"],"names":["module","exports","CircuitsCard","circuit","div","className","whileHover","scale","name","city","country","fastestLap","fastestLapDriver","fastestLapYear","length","img","src","trackImage","alt","whileTap","getCircuitsQuery","gql","containerVariants","hidden","opacity","y","visible","transition","ease","exit","element","icon","faArrowCircleLeft","Circuits","useQuery","loading","error","data","console","log","variants","initial","animate","to","circuitsData","circuits","map","key","id","displayCircuits","f1Sound","require","StartPage","useSound","volume","play","pause","useState","isHovering","setIsHovering","onMouseEnter","onMouseLeave","x","type","delay","duration","Home","About","Teams","Drivers","client","ApolloClient","uri","cache","InMemoryCache","App","location","useLocation","exitBeforeEnter","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.251a0152.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/f1pass.4f886ffc.mp3\";","import React from 'react'\nimport { ICircuit } from './Circuits'\nimport '../styles/CircuitsCard.css'\nimport { motion } from 'framer-motion'\n\ntype Tcircuits = {\n    circuit: ICircuit\n}\n\n\nexport const CircuitsCard = ({ circuit }: Tcircuits) => {\n    return (\n        <motion.div className=\"CircuitsCard-div\"\n       \n        whileHover={{ scale: 1.1 }}\n        >\n            <h1 className=\"CircuitsCard-h1\">{circuit.name}</h1>\n            <h3 className=\"CircuitsCard-city-country\">{circuit.city} - {circuit.country}</h3>\n\n            <h3 className=\"CircuitsCard-fastestLap\">Fastest Lap: <span className=\"fastestLap-span\">{circuit.fastestLap}</span></h3>\n            <h3 className=\"CircuitsCard-fastestLapDriver\">{circuit.fastestLapDriver}({circuit.fastestLapYear})</h3>\n            <h3 className=\"length\">Length: {circuit.length}</h3>\n            <motion.img className=\"card-img\" src={circuit.trackImage} alt=\"circuit\" \n            whileHover={{ scale: 1.9 }}\n            whileTap={{ scale: 2 }}\n            />\n\n        </motion.div>\n    )\n}\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client';\nimport { CircuitsCard } from './CircuitsCard'\nimport '../styles/Circuits.css'\nimport { motion } from 'framer-motion'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons'\nconst getCircuitsQuery = gql`\n{\n    circuits{\n        name\n        city\n        fastestLap\n        fastestLapDriver\n        fastestLapYear\n        fastestLapTeam\n        fastestLapCar\n        length\n        country\n        id\n        trackImage\n        weekendDate\n        month\n    }\n}\n`\n\nexport interface ICircuit {\n    name: string,\n    city: string,\n    fastestLap: string,\n    fastestLapDriver: string,\n    fastestLapYear: string,\n    fastestLapTeam: string,\n    fastestLapCar: string,\n    length: string,\n    country: string,\n    id: string,\n    trackImage: string,\n    weekendDate:string\n    month:string\n}\nconst containerVariants = {\n    hidden: {\n        opacity: 0,\n        y: '-100vh',\n    },\n    visible: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            ease: 'easeInOut',\n        }\n    },\n    exit: {\n        y: '-100vh',\n        transition: {\n\n            ease: 'easeInOut'\n        }\n    }\n}\nconst element = <FontAwesomeIcon icon={faArrowCircleLeft} />\n\nconst Circuits = () => {\n\n\n\n    const { loading, error, data } = useQuery(getCircuitsQuery);\n    console.log(data);\n    const displayCircuits = () => {\n        const circuitsData = data;\n        if (loading) {\n            return <p>Loading....</p>\n        } else if (error) {\n            return <p>Error Fetching Data</p>\n        }\n        else {\n            return circuitsData.circuits.map((circuit: ICircuit) => {\n                return <CircuitsCard key={circuit.id} circuit={circuit} />\n            })\n        }\n\n\n    }\n\n    return (\n        <motion.div className=\"Circuits-div\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"exit\"\n        >\n\n    <h1 className=\"Circuits-h1\"> <Link to='/home'>{element}</Link> Circuits</h1>\n    \n            <div className=\"Circuits-cards-div\">\n            {displayCircuits()}\n\n            </div>\n        </motion.div>\n    )\n}\n\nexport default Circuits\n","import React, { useState } from 'react'\nimport '../styles/StartPage.css'\nimport useSound from 'use-sound';\nimport { Link } from 'react-router-dom'\n\nimport { motion } from 'framer-motion'\nconst f1Sound = require(\"../sounds/f1pass.mp3\")\n\nexport const StartPage = () => {\n    const [play, { pause }] = useSound(\n        f1Sound,\n        { volume: 0.1 }\n    );\n    const [isHovering, setIsHovering] = useState(\n        false\n    );\n    console.log(isHovering);\n    \n    const onHoverHome = () => {\n        setIsHovering(true);\n        play();\n    }\n    const unHoverHome = () => {\n        setIsHovering(false);\n        pause();\n    }\n    const containerVariantsLeft = {\n\n        visible: {\n            opacity: 1,\n            x: 0,\n            transition: {\n                type: 'spring', delay: 0.5\n            }\n        },\n        exit: {\n            x: '-100vw',\n            transition: {\n                delay: 0.5,\n                duration: 1,\n                ease: 'easeOut'\n            }\n        }\n    }\n    const containerVariantsRight = {\n\n        visible: {\n            opacity: 1,\n            x: 0,\n            transition: {\n                type: 'spring', delay: 0.5\n            }\n\n        },\n        exit: {\n            x: '100vw',\n            transition: {\n                delay: 0.5,\n                duration: 1,\n                ease: 'easeOut'\n            }\n        }\n    }\n    return (\n        <Link to=\"/home\"\n\n            onMouseEnter={onHoverHome}\n            onMouseLeave={unHoverHome}\n        >\n            <div className=\"Startpage-div\"\n\n            >\n                <motion.div className=\"left-side\"\n                    variants={containerVariantsLeft}\n                    animate=\"visible\"\n                    exit=\"exit\"\n                >\n\n                    <h1 className=\"glitch\">\n                        F1\n                </h1>\n                </motion.div>\n                <motion.div className=\"right-side\"\n                    variants={containerVariantsRight}\n                    animate=\"visible\"\n                    exit=\"exit\"\n                >\n\n\n                    <h1 className=\"glitch\">Fans</h1>\n                </motion.div>\n\n            </div>\n        </Link>\n    )\n}\n","import React from 'react'\nimport '../styles/Home.css'\nimport { motion } from 'framer-motion'\nimport {Link} from 'react-router-dom'\nconst containerVariants = {\n    hidden: {\n        opacity: 0,\n        y: '-100vh',\n    },\n    visible: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            ease: 'easeInOut', \n        }\n    },\n    exit: {\n        y: '-100vh',\n        transition: {\n            ease: 'easeInOut'\n        }\n    }\n}\n\nexport const Home = () => {\n\n    return (\n        <motion.div className=\"Home-div\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <nav className=\"Home-nav\">\n                <Link className=\"Home-Link\" to='/about'>About</Link>\n                <Link className=\"Home-Link\" to='/circuits'>Circuits</Link>\n                <Link className=\"Home-Link\" to='/teams'>Teams</Link>\n                <Link className=\"Home-Link\" to='/drivers'>Drivers</Link>\n            </nav>\n        </motion.div>\n    )\n}\n","import React from 'react'\nimport '../styles/About.css'\nimport { motion } from 'framer-motion'\nconst containerVariants = {\n    hidden: {\n        opacity: 0,\n        y: '-100vh',\n    },\n    visible: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            ease: 'easeInOut',\n        }\n    },\n    exit: {\n        y: '-100vh',\n        transition: {\n            ease: 'easeInOut'\n        }\n    }\n}\n\nexport const About = () => {\n    return (\n        <motion.div className=\"About-div\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <div className=\"card\">\n                <p>I built this site to teach myself GraphQL using NodeJS, Apollo, React and MongoDB.</p>\n                <p>I created a GraphQL server that has a 'Circuits' object type. For the moment this is the only RootQuery.</p>\n                <p>The plan is to add 2 more object types: 'Teams' and 'Drivers'.</p>\n                <p>I am an avid fan of Formula 1 and wanted to create an informative site where all information concerning drivers teams and circuits is continuously updated.  </p>\n            </div>\n        </motion.div>\n    )\n}\n","import React from 'react'\nimport '../styles/About.css'\nimport { motion } from 'framer-motion'\nconst containerVariants = {\n    hidden: {\n        opacity: 0,\n        y: '-100vh',\n    },\n    visible: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            ease: 'easeInOut',\n        }\n    },\n    exit: {\n        y: '-100vh',\n        transition: {\n            ease: 'easeInOut'\n        }\n    }\n}\n\nexport const Teams = () => {\n    return (\n        <motion.div className=\"About-div\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <div className=\"card\">\n                <h1>Teams</h1>\n                <p>Under construction.  Will be a dynamic card layout, like the Circuits page</p>\n            </div>\n        </motion.div>\n    )\n}\n","import React from 'react'\nimport '../styles/About.css'\nimport { motion } from 'framer-motion'\nconst containerVariants = {\n    hidden: {\n        opacity: 0,\n        y: '-100vh',\n    },\n    visible: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            ease: 'easeInOut',\n        }\n    },\n    exit: {\n        y: '-100vh',\n        transition: {\n            ease: 'easeInOut'\n        }\n    }\n}\n\nexport const Drivers = () => {\n    return (\n        <motion.div className=\"About-div\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <div className=\"card\">\n                <h1>Drivers</h1>\n                <p>Under construction.  Will be a dynamic card layout, like the Circuits page</p>\n            </div>\n        </motion.div>\n    )\n}\n","import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport { AnimatePresence } from 'framer-motion'\n//component\nimport Circuits from './components/Circuits'\nimport { StartPage } from './components/StartPage';\nimport { Home } from './components/Home';\nimport { About } from './components/About';\nimport { Teams } from './components/Teams';\nimport { Drivers } from './components/Drivers';\n//------------------------------------\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\nconst App = () => {\n  const location = useLocation();\n  return (\n  \n\n\n    <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.key}>\n            <Route exact path=\"/\">\n              <StartPage />\n            </Route>\n            <Route exact path=\"/home\">\n              <Home />\n            </Route>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/circuits\">\n            <ApolloProvider client={client}>\n              <Circuits />\n          </ApolloProvider>\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route exact path=\"/drivers\">\n              <Drivers />\n            </Route>\n        </Switch>\n      </AnimatePresence>\n\n  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}